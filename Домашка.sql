/*
 урок 5 Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”
 Задача 1
Описание задания: Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

*/

UPDATE `users`
SET 
	created_at = now(),
	updated_at = now()
WHERE
	created_at = null,
	or updated_at = null
	;
/*
 урок 5 Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”
 Задача 2
Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10". Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

*/

UPDATE `users`
SET 
	created_at = STR_TO_DATE('20.10.2017 8:10', '%d.%m.%Y %h:%i'),
	updated_at = STR_TO_DATE('20.10.2017 8:10', '%d.%m.%Y %h:%i')
	;

/*
 урок 5 Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”
 Задача 3
В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.

*/

SELECT *
FROM storehouses_products
ORDER BY IF( value = 0, 1, 0 ) , value;

/*
 урок 5 Практическое задание теме “Агрегация данных”
 Задача 1
Подсчитайте средний возраст пользователей в таблице users

*/

select AVG(floor((to_days(now()) - to_days(birthday_at)) / 365.25)) as age from users;
 

/*
 урок 5 Практическое задание теме “Агрегация данных”
 Задача 2
Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.

*/

select WEEKDAY(DATE_ADD(birthday_at, INTERVAL YEAR(FROM_DAYS(DATEDIFF(CURDATE(), birthday_at)-1)) + 0 YEAR)) AS day_birthday, count(*) from users group by day_birthday;
 